workflows:
  ios_capacitor_testflight:
    name: iOS Capacitor → TestFlight
    instance_type: mac_mini_m2
    max_build_duration: 60

    integrations:
      # This MUST match the label you see in Codemagic > Integrations > Apple Developer Portal
      app_store_connect: APEX Business Systems

    environment:
      xcode: 15.4
      # Put these in Codemagic UI > Environment variables (group "appstore_credentials")
      # TEAM_ID: NWGUYF42KW
      # BUNDLE_ID: com.apex.tradeline
      # DIST_PROFILE_NAME: TL247_mobpro_tradeline_01  # exact provision profile name
      # PROJECT_BUILD_NUMBER: 21                        # (optional) monotonic build
      vars:
        IOS_BUILD_NUM: $PROJECT_BUILD_NUMBER

    cache:
      cache_paths:
        - ~/.npm
        - ~/Library/Caches/CocoaPods

    scripts:
      - name: Install deps & build web
        script: |
          set -euo pipefail
          npm ci
          npm run build

      - name: Ensure iOS platform (idempotent & self-heal)
        script: |
          set -euo pipefail
          # If we already have a native project, don't try to add again
          if [ -d ios/App/App.xcodeproj ] || [ -d ios/App/App.xcworkspace ]; then
            echo "✅ Native iOS project present — skipping add"
          # If ios/ exists but no Xcode project, self-heal by recreating it cleanly
          elif [ -d ios ]; then
            echo "⚠️  ios/ exists but no Xcode project — recreating"
            rm -rf ios
            npm i -D @capacitor/ios
            npx cap add ios
          else
            echo "🆕 Adding iOS platform…"
            npm i -D @capacitor/ios
            npx cap add ios
          fi


      - name: Sync iOS & CocoaPods
        script: |
          set -euo pipefail
          npx cap sync ios
          cd ios/App
          command -v pod >/dev/null 2>&1 || sudo gem install cocoapods --no-document
          pod repo update || true
          pod install --repo-update
          test -d App.xcworkspace || { echo "❌ CocoaPods didn't produce App.xcworkspace"; exit 1; }

      - name: Set iOS build number from Codemagic (optional)
        script: |
          set -euo pipefail
          if [ -n "${IOS_BUILD_NUM:-}" ]; then
            /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${IOS_BUILD_NUM}" ios/App/App/Info.plist || true
            echo "ℹ️  CFBundleVersion set to ${IOS_BUILD_NUM}"
          else
            echo "↪️  IOS_BUILD_NUM not set; skipping Info.plist patch"
          fi

      - name: Install signing certs & provisioning profiles (uploaded in UI)
        script: |
          set -euo pipefail
          keychain initialize
          keychain add-certificates
          echo "🔐 Installed signing certs and provisioning profiles to login keychain"

      - name: Apply provisioning profiles to Xcode project (all targets)
        script: |
          set -euo pipefail
          xcode-project use-profiles --project "ios/App/App.xcodeproj"
          echo "✅ Provisioning profiles applied to App and Pods targets"

      - name: Xcode archive (manual signing)
        script: |
          set -euo pipefail
          xcodebuild -workspace "ios/App/App.xcworkspace" \
            -scheme "App" \
            -configuration Release \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            CURRENT_PROJECT_VERSION="${IOS_BUILD_NUM:-1}" \
            -quiet \
            clean archive

      - name: Export IPA (App Store)
        script: |
          set -euo pipefail
          : "${DIST_PROFILE_NAME:?Set DIST_PROFILE_NAME to your App Store profile name in Codemagic env}"
          cat > exportOptions.plist <<PLIST
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>stripSwiftSymbols</key><true/>
            <key>compileBitcode</key><false/>
            <key>provisioningProfiles</key>
            <dict>
              <key>${BUNDLE_ID}</key><string>${DIST_PROFILE_NAME}</string>
            </dict>
          </dict></plist>
          PLIST
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist exportOptions.plist \
            -exportPath "$CM_BUILD_DIR/export"

    artifacts:
      - $CM_BUILD_DIR/export/*.ipa
      - $CM_BUILD_DIR/App.xcarchive

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # beta_groups:
        #   - Internal Testers
