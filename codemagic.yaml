workflows:
  ios_capacitor_testflight:
    name: iOS • Capacitor → TestFlight (Integration + Identities)
    instance_type: mac_mini_m2
    max_build_duration: 60

    # Use the Apple Developer Portal integration you connected in Codemagic UI
    integrations:
      app_store_connect: Created via API

    environment:
      groups:
        - ios_config                      # TEAM_ID, BUNDLE_ID, etc.
      ios_signing:                        # tell Codemagic which identity/profile set to pull
        distribution_type: app_store
        bundle_identifier: $BUNDLE_ID
      vars:
        APP_VERSION: "1.0.0"
        APP_BUILD: "1"                    # validator wants non-empty; we auto-bump below
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
      xcode: latest
      node: 20.11.1
      npm: 10
      cocoapods: default

    cache:
      cache_paths:
        - ~/.npm
        - ~/.cocoapods
        - ios/Pods

    scripts:
      - name: Resolve version/build
        script: |
          # Monotonic numeric build (YYMMDDHH)
          APP_BUILD="$(date +%y%m%d%H)"
          echo "Using APP_VERSION=$APP_VERSION / APP_BUILD=$APP_BUILD"

      - name: Install deps
        script: |
          npm ci --no-audit --no-fund

      - name: Build web (ignore lifecycle hooks)
        script: |
          # Avoid npm pre/post hook surprises in CI
          NPM_CONFIG_IGNORE_SCRIPTS=true npm run build

      - name: Verify built assets (run checks AFTER build)
        script: |
          node scripts/verify-app.cjs
          node scripts/verify_icons.mjs

      - name: Sync Capacitor platforms
        script: |
          npx cap sync ios

      - name: Raise iOS deployment target to 15.0 (project + Pods)
        script: |
          # 1) Bump Xcode project deployment target for all configs
          sed -i '' -E "s/IPHONEOS_DEPLOYMENT_TARGET = [0-9.]+;/IPHONEOS_DEPLOYMENT_TARGET = 15.0;/g" ios/App/App.xcodeproj/project.pbxproj
          # 2) Ensure Podfile platform matches (so Pods compile for the same target)
          if grep -q "platform :ios" ios/App/Podfile; then
            sed -i '' -E "s/platform :ios, *'[0-9.]+'$/platform :ios, '15.0'/" ios/App/Podfile
          else
            (echo "platform :ios, '15.0'"; cat ios/App/Podfile) > ios/App/Podfile.tmp && mv ios/App/Podfile.tmp ios/App/Podfile
          fi

      - name: Install CocoaPods
        script: |
          cd ios/App
          pod install --repo-update

      - name: Set iOS Info.plist versions
        script: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${APP_VERSION}" ios/App/App/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${APP_BUILD}" ios/App/App/Info.plist

      - name: Initialize keychain & add uploaded certs
        script: |
          keychain initialize
          keychain add-certificates         # imports your Code signing identities certificates

      - name: Apply provisioning profiles to Xcode project
        script: |
          xcode-project use-profiles        # applies profiles that match ios_signing settings

      - name: Capacitor copy iOS (force)
        script: |
          # Ensure web assets + config exist inside the iOS project at archive time
          npx cap copy ios
          [ -f ios/App/App/capacitor.config.json ] || (echo "❌ Missing ios/App/App/capacitor.config.json" && exit 1)
          [ -d ios/App/App/public ] || (echo "❌ Missing ios/App/App/public (web assets). Check Vite outDir and cap config.)" && exit 1)

      - name: Xcode archive (Release)
        script: |
          xcodebuild -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/TradeLine247.xcarchive" \
            -allowProvisioningUpdates \
            clean archive

      - name: Export IPA for App Store
        script: |
          cat > exportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>stripSwiftSymbols</key><true/>
            <key>compileBitcode</key><false/>
          </dict>
          </plist>
          PLIST
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/TradeLine247.xcarchive" \
            -exportOptionsPlist exportOptions.plist \
            -exportPath "$CM_BUILD_DIR/export"

    artifacts:
      - $CM_BUILD_DIR/export/*.ipa
      - $CM_BUILD_DIR/TradeLine247.xcarchive

    publishing:
      app_store_connect:
        auth: integration                  # publish via the connected integration
        submit_to_testflight: true
