      - name: Apply provisioning profiles
        script: |
          xcode-project use-profiles

      - name: Detect App Store provisioning profile for export
        script: |
          # Find a .mobileprovision that matches the BUNDLE_ID and is an App Store profile (no ProvisionedDevices key).
          PROFILE_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"
          MATCHED=""
          PROFILE_NAME=""

          set -e
          for f in "$PROFILE_DIR"/*.mobileprovision; do
            [ -e "$f" ] || continue
            # Decode to plist
            PLIST=$(/usr/bin/security cms -D -i "$f")
            BID=$(/usr/libexec/PlistBuddy -c "Print :Entitlements:application-identifier" /dev/stdin <<<"$PLIST" 2>/dev/null | sed "s/^[A-Z0-9]*\.//")
            HAS_DEVICES=$(/usr/libexec/PlistBuddy -c "Print :ProvisionedDevices" /dev/stdin <<<"$PLIST" 2>/dev/null && echo yes || echo no)
            TYPE=$(/usr/libexec/PlistBuddy -c "Print :ProvisionsAllDevices" /dev/stdin <<<"$PLIST" 2>/dev/null && echo enterprise || echo standard)
            NAME=$(/usr/libexec/PlistBuddy -c "Print :Name" /dev/stdin <<<"$PLIST" 2>/dev/null)

            if [ "$BID" = "$BUNDLE_ID" ] && [ "$HAS_DEVICES" = "no" ] && [ "$TYPE" = "standard" ]; then
              MATCHED="$f"
              PROFILE_NAME="$NAME"
              break
            fi
          done

          if [ -z "$MATCHED" ] || [ -z "$PROFILE_NAME" ]; then
            echo "ERROR: No App Store provisioning profile found for $BUNDLE_ID in $PROFILE_DIR"
            echo "Make sure an App Store profile for $BUNDLE_ID is present in Code signing identities, or use Fetch profiles."
            exit 1
          fi

          echo "Using provisioning profile: $PROFILE_NAME"
          echo "PROFILE_NAME=$PROFILE_NAME" >> $CM_ENV

      - name: Xcode archive (Release)
        script: |
          xcodebuild -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/TradeLine247.xcarchive" \
            -allowProvisioningUpdates \
            clean archive

      - name: Export IPA for App Store (explicit profile)
        script: |
          cat > exportOptions.plist <<PLIST
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>stripSwiftSymbols</key><true/>
            <key>compileBitcode</key><false/>
            <key>provisioningProfiles</key>
            <dict>
              <key>${BUNDLE_ID}</key><string>${PROFILE_NAME}</string>
            </dict>
          </dict>
          </plist>
          PLIST

          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/TradeLine247.xcarchive" \
            -exportOptionsPlist exportOptions.plist \
            -exportPath "$CM_BUILD_DIR/export"
