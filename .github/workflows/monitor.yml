name: Prod Monitor
on:
  schedule: [{ cron: "*/5 * * * *" }]
  workflow_dispatch:
    inputs:
      base:
        description: "Prod base URL"
        required: true
        default: "https://www.tradeline247ai.com"
concurrency:
  group: prod-monitor
  cancel-in-progress: true
jobs:
  check:
    runs-on: ubuntu-latest
    env:
      BASE: ${{ github.event.inputs.base || 'https://www.tradeline247ai.com' }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Curl checks
        id: curl
        run: |
          set -e
          p(){ printf "%-24s %s\n" "$1" "$2"; }
          code_home=$(curl -s -o /dev/null -w "%{http_code}" "$BASE/")
          code_health=$(curl -s -o /dev/null -w "%{http_code}" "$BASE/healthz")
          code_manifest=$(curl -s -o /dev/null -w "%{http_code}" "$BASE/manifest.webmanifest")
          html=$(curl -fsS "$BASE/" || true)
          has_ga=$(echo "$html" | grep -q "G-5KPE9X0NDM" && echo "yes" || echo "no")
          has_klaviyo=$(echo "$html" | grep -q "static.klaviyo.com/onsite/js/Te837r/klaviyo.js" && echo "yes" || echo "no")
          has_pwa_btn=$(echo "$html" | grep -qi "Install App" && echo "yes" || echo "no" )
          echo "code_home=$code_home" >> $GITHUB_OUTPUT
          echo "code_health=$code_health" >> $GITHUB_OUTPUT
          echo "code_manifest=$code_manifest" >> $GITHUB_OUTPUT
          echo "has_ga=$has_ga" >> $GITHUB_OUTPUT
          echo "has_klaviyo=$has_klaviyo" >> $GITHUB_OUTPUT
          echo "has_pwa_btn=$has_pwa_btn" >> $GITHUB_OUTPUT
          p "GET /" $code_home
          p "GET /healthz" $code_health
          p "GET /manifest.webmanifest" $code_manifest
          p "GA4 present" $has_ga
          p "Klaviyo present" $has_klaviyo
          p "PWA UI present" $has_pwa_btn
      - name: Fail if any critical check fails
        if: |
          steps.curl.outputs.code_home != '200' ||
          steps.curl.outputs.code_health != '200' ||
          steps.curl.outputs.code_manifest != '200' ||
          steps.curl.outputs.has_ga != 'yes' ||
          steps.curl.outputs.has_klaviyo != 'yes'
        run: |
          echo "❌ Monitor failed"; exit 1
      - name: Notify Slack on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#CC0000'
          SLACK_TITLE: 'Prod Monitor FAILED'
          SLACK_MESSAGE: |
            ${{ env.BASE }}
            / -> ${{ steps.curl.outputs.code_home }}
            /healthz -> ${{ steps.curl.outputs.code_health }}
            /manifest -> ${{ steps.curl.outputs.code_manifest }}
            GA4=${{ steps.curl.outputs.has_ga }} • Klaviyo=${{ steps.curl.outputs.has_klaviyo }} • PWA_UI=${{ steps.curl.outputs.has_pwa_btn }}
      - name: Notify Slack on success (first run / manual)
        if: success() && github.event_name == 'workflow_dispatch'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#2EB886'
          SLACK_TITLE: 'Prod Monitor PASS'
          SLACK_MESSAGE: |
            ${{ env.BASE }} is healthy.