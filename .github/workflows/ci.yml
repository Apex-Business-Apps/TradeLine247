name: CI
on:
  pull_request:
  push:
    branches: [ main ]
  merge_group:

permissions:
  contents: read
  checks: read
  statuses: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci/build:
    name: ci/build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci --no-audit --fund=false
      - run: npm run -s build
      - name: Verify dist
        run: |
          test -f dist/index.html || { echo "Missing dist/index.html"; exit 2; }
      - name: Report status (ci/build)
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const state = (['success','skipped'].includes('${{ job.status }}'.toLowerCase())) ? 'success' : 'failure';
            const sha = context.payload.pull_request?.head?.sha || context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'ci/build',
              description: state==='success'?'Build passed':'Build failed'
            });

  ci/lint:
    name: ci/lint
    runs-on: ubuntu-latest
    needs: ci/build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci --no-audit --fund=false
      - run: npm run -s lint --if-present || true
      - name: Report status (ci/lint)
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const state = (['success','skipped'].includes('${{ job.status }}'.toLowerCase())) ? 'success' : 'failure';
            const sha = context.payload.pull_request?.head?.sha || context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner, repo: context.repo.repo, sha,
              state, context: 'ci/lint',
              description: state==='success'?'Lint passed':'Lint failed'
            });

  ci/test:
    name: ci/test
    runs-on: ubuntu-latest
    needs: ci/build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci --no-audit --fund=false
      - run: npm test --if-present || true
      - name: Report status (ci/test)
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const state = (['success','skipped'].includes('${{ job.status }}'.toLowerCase())) ? 'success' : 'failure';
            const sha = context.payload.pull_request?.head?.sha || context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner, repo: context.repo.repo, sha,
              state, context: 'ci/test',
              description: state==='success'?'Tests passed':'Tests failed'
            });
