name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:

permissions:
  contents: read
  statuses: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:                       # ✅ valid job ID
    name: ci/lint            # ← display name (required context)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci --no-audit --fund=false
      - run: npm run -s lint --if-present
      - name: Report status (ci/lint)
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const sha = context.payload.pull_request?.head?.sha || context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'ci/lint',
              description: state === 'success' ? 'Lint passed' : 'Lint failed'
            });

  build:                      # ✅ valid job ID
    name: ci/build
    runs-on: ubuntu-latest
    needs: lint               # ✅ reference the ID, not the name
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci --no-audit --fund=false
      - run: npm run -s typecheck --if-present
      - run: npm run -s build
      - name: Verify Vite outDir
        run: test -f dist/index.html
      - name: Report status (ci/build)
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const sha = context.payload.pull_request?.head?.sha || context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'ci/build',
              description: state === 'success' ? 'Build passed' : 'Build failed'
            });

  test:                       # ✅ valid job ID
    name: ci/test
    runs-on: ubuntu-latest
    needs: build              # ✅ reference the ID
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci --no-audit --fund=false
      - run: npm test --if-present
      - name: Report status (ci/test)
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const sha = context.payload.pull_request?.head?.sha || context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'ci/test',
              description: state === 'success' ? 'Tests passed' : 'Tests failed'
            });
