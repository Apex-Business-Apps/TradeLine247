name: synthetic-smoke

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"   # minimum supported frequency

permissions:
  contents: read
  issues: write

concurrency:
  group: synthetic-smoke
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Check apex redirect → www (expect 308/301)
        shell: bash
        run: |
          set -euo pipefail
          APEX="https://tradeline247ai.com"
          WWW="https://www.tradeline247ai.com"
          code=$(curl -sS -o /dev/null -w "%{http_code}" -I "$APEX")
          if [[ "$code" != "308" && "$code" != "301" ]]; then
            echo "Apex not permanently redirecting ($code)"; exit 2;
          fi
          loc=$(curl -sS -I "$APEX" | awk -F': ' '/^Location:/ {print $2}' | tr -d '\r')
          [[ "$loc" == "$WWW" || "$loc" == "$WWW/" ]] || { echo "Bad Location: $loc"; exit 2; }

      - name: Probe health + assets + checksum + brand title
        shell: bash
        run: |
          set -euo pipefail
          BASE="https://www.tradeline247ai.com"
          curl -fsS "$BASE/healthz"  > /dev/null
          curl -fsS "$BASE/readyz"   > /dev/null
          curl -fsS "$BASE/assets/brand/App_Icons/icon-192.png" > /dev/null
          curl -fsS "$BASE/download/release.tar.gz"          -o rel.tgz
          curl -fsS "$BASE/download/release.tar.gz.sha256"   -o rel.sha256
          calc=$(sha256sum rel.tgz | awk '{print $1}')
          want=$(tr -d ' \r\n' < rel.sha256)
          [[ "$calc" == "$want" ]] || { echo "SHA256 mismatch"; exit 3; }
          title=$(curl -fsS "$BASE/" | sed -n 's:.*<title>\\(.*\\)</title>.*:\\1:p' | head -n1)
          [[ "$title" == "TradeLine 24/7 — Your 24/7 Ai Receptionist!" ]] || { echo "Title mismatch: $title"; exit 4; }

      - name: Ping Healthchecks (optional)
        if: ${{ success() && secrets.HEALTHCHECKS_PING_URL != '' }}
        run: curl -fsS "${{ secrets.HEALTHCHECKS_PING_URL }}" -o /dev/null

      - name: On failure → open/append outage issue
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = "PROD outage: tradeline247ai.com synthetic checks failing";
            const body  = `Auto-created ${new Date().toISOString()} — run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const q = `repo:${context.repo.owner}/${context.repo.repo} is:issue is:open in:title "${title}"`;
            const res = await github.rest.search.issuesAndPullRequests({ q });
            if (res.data.items.length === 0) {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ["outage","prod"] });
            } else {
              const n = res.data.items[0].number;
              await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: n, body });
            }

      - name: Slack notify (optional)
        if: ${{ failure() && secrets.SLACK_WEBHOOK_URL != '' }}
        shell: bash
        run: |
          printf '{"text":"❌ Synthetic smoke failed on tradeline247ai.com. Run: %s/%s/actions/runs/%s"}' \
            "$GITHUB_SERVER_URL" "$GITHUB_REPOSITORY" "$GITHUB_RUN_ID" \
            | curl -fsS -X POST -H 'Content-type: application/json' --data @- "${{ secrets.SLACK_WEBHOOK_URL }}"