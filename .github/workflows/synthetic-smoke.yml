name: synthetic-smoke
on:
  workflow_dispatch:
  schedule: [ { cron: "*/5 * * * *" } ]
permissions: { contents: read, issues: write }
concurrency: { group: synthetic-smoke, cancel-in-progress: true }
jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Apex → www (expect 308/301)
        run: |
          set -euo pipefail
          APEX="https://tradeline247ai.com"; WWW="https://www.tradeline247ai.com"
          code=$(curl -sS -o /dev/null -w "%{http_code}" -I "$APEX")
          [[ "$code" == "308" || "$code" == "301" ]] || { echo "bad apex code=$code"; exit 2; }
          loc=$(curl -sS -I "$APEX" | awk -F': ' '/^Location:/ {print $2}' | tr -d '\r')
          [[ "$loc" == "$WWW" || "$loc" == "$WWW/" ]] || { echo "bad Location=$loc"; exit 2; }
      - name: Health + assets + sha + title
        run: |
          set -euo pipefail
          BASE="https://www.tradeline247ai.com"
          curl -fsS "$BASE/healthz" > /dev/null
          curl -fsS "$BASE/readyz"  > /dev/null
          curl -fsS "$BASE/assets/brand/App_Icons/icon-192.png" > /dev/null
          curl -fsS "$BASE/download/release.tar.gz"        -o rel.tgz
          curl -fsS "$BASE/download/release.tar.gz.sha256" -o rel.sha256
          calc=$(sha256sum rel.tgz | awk '{print $1}')
          want=$(tr -d ' \r\n' < rel.sha256)
          [[ "$calc" == "$want" ]] || { echo "sha mismatch"; exit 3; }
          title=$(curl -fsS "$BASE/" | sed -n 's:.*<title>\\(.*\\)</title>.*:\\1:p' | head -n1)
          [[ "$title" == "TradeLine 24/7 — Your 24/7 Ai Receptionist!" ]] || { echo "title mismatch: $title"; exit 4; }
      - name: On failure → issue
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            const title = "PROD outage: tradeline247ai.com synthetic checks failing";
            const body  = `Run: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ["outage","prod"] });